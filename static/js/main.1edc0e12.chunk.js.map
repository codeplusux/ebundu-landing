{"version":3,"sources":["i/appleBadge.png","i/androidBadge.png","App.js","serviceWorker.js","index.js"],"names":["module","exports","App","id","className","xmlns","width","height","d","fill","href","title","target","src","AppleBadge","alt","AndroidBadge","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"0GAAAA,EAAOC,QAAU,IAA0B,wC,gBCA3CD,EAAOC,QAAU,IAA0B,0C,sMC0E5BC,MAnEf,WACE,OACE,yBAAKC,GAAG,QACN,yBAAKA,GAAG,iBACR,yBAAKA,GAAG,WACN,yBAAKC,UAAU,YACb,yBAAKA,UAAU,UACb,yBAAKA,UAAU,SACb,yBAAKA,UAAU,cACb,yBAAKC,MAAM,6BAA6BC,MAAM,KAAKC,OAAO,MACxD,0BACEC,EAAE,wPACFC,KAAK,qBAEP,0BACED,EAAE,sLACFC,KAAK,oBAEP,0BACED,EAAE,+LACFC,KAAK,oBAEP,0BACED,EAAE,iMACFC,KAAK,oBAEP,0BACED,EAAE,oqBACFC,KAAK,sBAIX,yBAAKL,UAAU,eACb,sCACA,uBAAGA,UAAU,OAAb,mBACA,uBAAGA,UAAU,QAAb,UAGJ,yFACA,qFACA,wBAAIA,UAAU,UACZ,4BACE,uBACEM,KAAK,yDACLC,MAAM,2BACNC,OAAO,SAEP,yBAAKC,IAAKC,IAAYC,IAAI,gBAG9B,uBACEL,KAAK,2EACLC,MAAM,2BACNC,OAAO,SAEP,yBAAKC,IAAKG,IAAcD,IAAI,iCAIlC,yBAAKX,UAAU,WAEjB,yBAAKA,UAAU,eAAf,gCCxDYa,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.1edc0e12.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/appleBadge.e15e0952.png\";","module.exports = __webpack_public_path__ + \"static/media/androidBadge.93425ab0.png\";","import React from \"react\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./App.css\";\nimport AppleBadge from \"./i/appleBadge.png\";\nimport AndroidBadge from \"./i/androidBadge.png\";\n// import Phone from \"./i/phone.png\";\n\nfunction App() {\n  return (\n    <div id=\"main\">\n      <div id=\"neighborhood\"></div>\n      <div id=\"content\">\n        <div className=\"mainInfo\">\n          <div className=\"detail\">\n            <div className=\"brand\">\n              <div className=\"float-left\">\n                <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"78\" height=\"78\">\n                  <path\n                    d=\"M 58.874 77.678 L 19.126 77.678 C 8.741 77.678 0.322 69.259 0.322 58.874 L 0.322 19.126 C 0.322 8.741 8.741 0.322 19.126 0.322 L 58.874 0.322 C 69.259 0.322 77.678 8.741 77.678 19.126 L 77.678 58.874 C 77.678 69.259 69.259 77.678 58.874 77.678 Z\"\n                    fill=\"hsl(0, 0%, 100%)\"\n                  ></path>\n                  <path\n                    d=\"M 22.53 37.066 C 14.13 37.066 7.323 30.259 7.323 21.859 C 7.323 13.46 14.13 6.653 22.53 6.653 C 30.929 6.653 37.737 13.46 37.737 21.859 C 37.73 30.259 30.923 37.066 22.53 37.066 Z\"\n                    fill=\"rgb(230,149,86)\"\n                  ></path>\n                  <path\n                    d=\"M 55.934 37.066 C 47.535 37.066 40.728 30.259 40.728 21.859 C 40.728 13.46 47.535 6.653 55.934 6.653 C 64.334 6.653 71.141 13.46 71.141 21.859 C 71.141 30.259 64.334 37.066 55.934 37.066 Z\"\n                    fill=\"rgb(110,73,227)\"\n                  ></path>\n                  <path\n                    d=\"M 55.934 72.153 C 47.535 72.153 40.728 65.346 40.728 56.946 C 40.728 48.547 47.535 41.74 55.934 41.74 C 64.334 41.74 71.141 48.547 71.141 56.946 C 71.141 65.346 64.334 72.153 55.934 72.153 Z\"\n                    fill=\"rgb(69,201,137)\"\n                  ></path>\n                  <path\n                    d=\"M 35.145 57.507 L 13.679 57.507 C 13.827 60.202 14.736 62.368 16.399 63.999 C 18.062 65.63 20.041 66.448 22.349 66.448 C 26.269 66.448 29.266 64.514 31.329 60.653 L 34.475 62.271 C 33.069 64.875 31.406 66.796 29.492 68.04 C 27.577 69.285 25.282 69.903 22.62 69.903 C 18.939 69.903 15.897 68.64 13.505 66.107 C 11.107 63.58 9.914 60.531 9.914 56.966 C 9.914 53.401 11.12 50.352 13.531 47.806 C 15.942 45.259 18.926 43.989 22.491 43.989 C 26.056 43.989 29.034 45.195 31.426 47.606 C 33.817 50.017 35.055 53.317 35.145 57.507 Z M 31.013 54.233 C 30.562 52.138 29.543 50.507 27.958 49.34 C 26.372 48.173 24.547 47.586 22.478 47.586 C 18.288 47.586 15.503 49.804 14.124 54.233 Z\"\n                    fill=\"rgb(110,73,227)\"\n                  ></path>\n                </svg>\n              </div>\n              <div className=\"float-right\">\n                <h1>ebundu</h1>\n                <p className=\"mt8\">Mejor comunidad</p>\n                <p className=\"mt18\">beta</p>\n              </div>\n            </div>\n            <h2>Comparte actualizaciones con l@s vecin@s de tu comunidad.</h2>\n            <p>Descarga ya la aplicación desde tu tienda favorita.</p>\n            <ul className=\"stores\">\n              <li>\n                <a\n                  href=\"https://apps.apple.com/cl/app/ebundu/id1525399985?l=en\"\n                  title=\"Descarga desde App store\"\n                  target=\"blank\"\n                >\n                  <img src={AppleBadge} alt=\"App store\" />\n                </a>\n              </li>\n              <a\n                href=\"https://play.google.com/store/apps/details?id=com.ebundu.ebundu_resident\"\n                title=\"Descarga desde App store\"\n                target=\"blank\"\n              >\n                <img src={AndroidBadge} alt=\"Descarga desde Play store\" />\n              </a>\n            </ul>\n          </div>\n          <div className=\"phone\"></div>\n        </div>\n        <div className=\"generalInfo\">Conoce más de nosotros</div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\nserviceWorker.unregister();\n"],"sourceRoot":""}